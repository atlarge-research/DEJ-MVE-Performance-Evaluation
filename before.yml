---
- hosts: localhost
  pre_tasks:
    - name: Check cache directory
      file:
        path: cache
        state: directory
    - name: Check if cache contains maven
      stat:
        path: "{{ playbook_dir }}/cache/apache-maven-3.9.5/bin/mvn"
      register: stat_maven
    - name: Download maven
      shell: |
          wget https://dlcdn.apache.org/maven/maven-3/3.9.5/binaries/apache-maven-3.9.5-bin.tar.gz
          tar xvfz apache-maven-3.9.5-bin.tar.gz
          mv apache-maven-3.9.5 {{ playbook_dir }}/cache/
          # echo PATH="/home/$(whoami)/apache-maven-3.9.5/bin:\$PATH" >> ~/.bashrc
          rm apache-maven-3.9.5-bin.tar.gz
      when: not stat_maven.stat.exists
    - name: Copy .m2 directory # this is a bit of a hack. Not needed if artifact repository has good bandwidth
      ansible.posix.synchronize:
        src: /var/scratch/jdonkerv/.m2/
        dest: /home/{{ ansible_user_id }}/.m2/
      ignore_errors: yes
        #insert rather get normal minecraft server
    - name: Make dir for minecraft
      file:
        path: "{{playbook_dir}}/server"
        state: directory
    - name: Download minecraft
      get_url:
        url: https://piston-data.mojang.com/v1/objects/8dd1a28015f51b1803213892b50b7b4fc76e594d/server.jar
        dest: "{{playbook_dir}}/server/server.jar"
    - name: place eula.txt
      copy:
        src: "{{playbook_dir}}/eula.txt"
        dest: "{{playbook_dir}}/server/eula.txt"
    - name: place server.properties
      copy:
        src: "{{playbook_dir}}/server.properties"
        dest: "{{playbook_dir}}/server/server.properties"
    - name: "[TESTING] place ops.json"
      copy:
        src: "{{playbook_dir}}/ops.json"
        dest: "{{playbook_dir}}/server/ops.json"
      
    - name: place jmx exporter config
      copy:
        src: "{{playbook_dir}}/config.yml"
        dest: "{{playbook_dir}}/server/jmxexp_config.yml"
    - name: download JMX exporter
      get_url:
        url: https://repo.maven.apache.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.20.0/jmx_prometheus_javaagent-0.20.0.jar
        dest: "{{playbook_dir}}/server/jmx_prometheus_javaagent-0.20.0.jar"
    - name: "download prometheus"
      get_url:
        url: https://github.com/prometheus/prometheus/releases/download/v2.51.2/prometheus-2.51.2.linux-amd64.tar.gz
        dest: "{{playbook_dir}}/prometheus-archive.tar.gz"
    - name: "unpack prometheus"
      unarchive:
        src: "{{playbook_dir}}/prometheus-archive.tar.gz"
        dest: "{{playbook_dir}}"
    - name: "remove archive"
      file: 
        path: "{{playbook_dir}}/prometheus-archive.tar.gz"
        state: absent
    - name: "rename directory"
      shell: |
        mv -n prometheus-2.51.2.linux-amd64 prometheus
    - name: "place prometheus_config.yml"
      copy:
        src: "{{playbook_dir}}/prometheus_config.yml"
        dest: "{{playbook_dir}}/prometheus/prometheus_config.yml"
    - name: "install mineflayer"
      shell: |
        npm install mineflayer
