---
- hosts: localhost
  pre_tasks:
    - name: Check cache directory
      file:
        path: cache
        state: directory
    - name: Check if cache contains maven
      stat:
        path: "{{ playbook_dir }}/cache/apache-maven-3.9.5/bin/mvn"
      register: stat_maven
    - name: Download maven
      shell: |
          wget https://dlcdn.apache.org/maven/maven-3/3.9.5/binaries/apache-maven-3.9.5-bin.tar.gz
          tar xvfz apache-maven-3.9.5-bin.tar.gz
          mv apache-maven-3.9.5 {{ playbook_dir }}/cache/
          # echo PATH="/home/$(whoami)/apache-maven-3.9.5/bin:\$PATH" >> ~/.bashrc
          rm apache-maven-3.9.5-bin.tar.gz
      when: not stat_maven.stat.exists
    - name: Copy .m2 directory # this is a bit of a hack. Not needed if artifact repository has good bandwidth
      ansible.posix.synchronize:
        src: /var/scratch/jdonkerv/.m2/
        dest: /home/{{ ansible_user_id }}/.m2/
      ignore_errors: yes
        #insert rather get normal minecraft server
    - name: Make dir for minecraft
      file:
        path: "{{playbook_dir}}/server"
        state: directory
    - name: Download minecraft
      get_url:
        url: https://piston-data.mojang.com/v1/objects/8dd1a28015f51b1803213892b50b7b4fc76e594d/server.jar
        dest: "{{playbook_dir}}/server/server.jar"
    - name: place eula.txt
      copy:
        src: "{{playbook_dir}}/eula.txt"
        dest: "{{playbook_dir}}/server/eula.txt"
    - name: Download JMXterm
      get_url: 
        url: https://github.com/jiaqi/jmxterm/releases/download/v1.0.4/jmxterm-1.0.4-uber.jar
        dest: "{{playbook_dir}}/server/jmxterm-1.0.4-uber.jar"
    - name: Validate jmxterm download
      shell: |
          cd server
          ls -a
          pwd
    - name: Create file for jmx output
      file:
        path: "{{playbook_dir}}/server/output.txt"
        state: touch
